@{
    ViewData["Title"] = "Inicio";
}
@using BusinessEntity.Response;
@model DashboardResponse;


<!DOCTYPE html>
<html lang='en'>
<head>
    <meta charset='utf-8' />
    <link href="~/css/sb-admin-2.min.css" rel="stylesheet">
    <link href="~/css/event-calendar.min.css" rel="stylesheet">

@*    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@@event-calendar/build@1.5.1/event-calendar.min.css">
*@</head>
<body>
    <style>
        /* Estilo para la tabla striped con colores de fondo y texto distintivos */
        .table -striped tbody tr:nth-of-type(odd) {
            background-color: #f2f2f2; /* Color de fondo para filas impares */
        }

        .table-striped tbody tr:nth-o f-typ e(even ) {
            background-color: #ffffff; /* Color de fondo para filas pares */
        }

        .tabl e-striped tbody tr td {
            color: #333; /* Color del texto en las celdas */
        }

    </style>
    <div class="container-fluid" id="app">
        <!-- Page Heading -->
        <div class="d-sm-flex align-items-center justify-content-between mb-4">
            <h1 class="h3 mb-0 text-gray-800">Panel de inicio</h1>
        </div>
        @if (Model.success)
        {
            <div>
                <!-- Content Row -->
                <div class="row">

                    <!-- Earnings (Monthly) Card Example -->
                    <div class="col-xl-4 col-md-4 mb-4">
                        <div class="card border-left-primary shadow h-100 py-2">
                            <div class="card-body">
                                <div class="row no-gutters align-items-center">
                                    <div class="col mr-2">
                                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                            Turnos totales
                                        </div>
                                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.cantTurnosTotales</div>
                                    </div>
                                    <div class="col-auto">
                                        <i class="fas fa-calendar fa-2x text-gray-300"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-4 col-md-4 mb-4">
                        <div class="card border-left-success shadow h-100 py-2">
                            <div class="card-body">
                                <div class="row no-gutters align-items-center">
                                    <div class="col mr-2">
                                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                            Turnos Activos
                                        </div>
                                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.cantTurnosActivos</div>
                                    </div>
                                    <div class="col-auto">
                                        <i class="fas fa-calendar fa-2x text-gray-300"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-4 col-md-4 mb-4">
                        <div class="card border-left-info shadow h-100 py-2">
                            <div class="card-body">
                                <div class="row no-gutters align-items-center">
                                    <div class="col mr-2">
                                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                            Pacientes
                                        </div>
                                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.cantPacientes</div>
                                    </div>
                                    <div class="col-auto">
                                        <i class="fas fa-calendar fa-2x text-gray-300"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Content Row -->

                <div class="row">

                    <!-- Area Chart -->
                    <div class="col-xl-12 col-lg-12">
                        <div class="card shadow mb-4">
                            <!-- Card Header - Dropdown -->
                            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                                <h6 class="m-0 font-weight-bold text-primary">Calendario de turnos del día</h6>
                            </div>
                            <!-- Card Body -->
                            <div class="card-body">
                                <div id="ec"></div>
                            </div>
                        </div>
                    </div>

                </div>

                <!-- Content modal -->
                <div class="row">
                    <div class="modal fade" id="eventModal" tabindex="-1" role="dialog" aria-labelledby="eventModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="eventModalLabel">Detalles del Turno</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="close" v-on:click="btnCerrarModalClick()">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body" id="eventModalBody">
                                    <table class="table table-striped">
                                        <tr>
                                            <td><strong>Nombre:</strong></td>
                                            <td>{{modalNombre}}</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Email:</strong></td>
                                            <td>{{modalEmail}}</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Teléfono:</strong></td>
                                            <td>{{modalTelefono}}</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Fecha y Hora de Inicio:</strong></td>
                                            <td>{{modalFechaInicio}}</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Fecha y Hora de Fin:</strong></td>
                                            <td>{{modalFechaFin}}</td>
                                        </tr>
                                    </table>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal" id="btnCerrarModal" v-on:click="btnCerrarModalClick()">Cerrar</button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">No hay datos para su usuario. Por favor, comuníquese con el administrador.</h6>
                </div>
            </div>
        }



    </div>
    <script src="~/js/vue.global.js"></script>
<script src="~/js/event-calendar.min.js"></script>
    <script>
        const app = Vue.createApp({

            data() {
                return {
                    //Lista Agenda
                    agendaList: [],
                    //Datos Modal
                    modalNombre: "",
                    modalEmail: "",
                    modalTelefono: "",
                    modalFechaInicio: "",
                    modalFechaFin: "",
                    //Validacion - El usuario tiene datos o un prof. Asociado
                }
            },
            mounted() {
                var Data = @Html.Raw(Json.Serialize(Model));
                console.log(Data)
                if (Data.success) {
                    this.agendaList = this.fillAgenda(Data.turnoList);
                }
            },
            methods: {
                fillAgenda(agenda) {

                    const colors = ['#6d6875', '#073b4c']; // Array de colores diferentes
                    let colorIndex = 0; // Índice para seleccionar colores del array

                    for (let turno of agenda) {
                        let obj = {
                            id: turno.id,
                            start: turno.fechaInicio,
                            end: turno.fechaFin,
                            title: turno.titulo,
                            backgroundColor: colors[colorIndex], // Asignar un color del array
                            textColor: '#FFFFFF',
                            editable: false, // Evita que se puedan editar y mover
                            startEditable: false, // Evita que se pueda cambiar el inicio del evento
                            durationEditable: false, // Evita que se pueda cambiar la duración del evento
                            extendedProps: {
                                name: turno.nombre,
                                email: turno.email,
                                phone: turno.telefono,
                            }
                        };

                        this.agendaList.push(obj);
                        colorIndex = (colorIndex + 1) % colors.length;

                    }
                    this.initializeCalendar();
                },
                btnCerrarModalClick() {
                    $('#eventModal').modal('toggle');
                },
                formatDate(date) {
                    const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };
                    const formattedDate = date.toLocaleDateString('es-AR', options);
                    return formattedDate.replace(',', ''); // Elimina la coma en la fecha
                },
                initializeCalendar() {
                    let that = this;
                    console.log(that.agendaList)
                    let ec = new EventCalendar(document.getElementById('ec'), {
                        view: 'timeGridDay',
                        language: 'es',
                        height: '500px',
                        editable: false,
                        eventClick: function (info) {
                            const clickedEvent = info.event; // Objeto del evento clicado
                            const eventTitle = clickedEvent.title; // Título del evento
                            const eventStart = that.formatDate(clickedEvent.start); // Hora de inicio del evento
                            const eventEnd = that.formatDate(clickedEvent.end); // Hora de fin del evento
                            const eventExtendedProps = clickedEvent.extendedProps; // Propiedades extendidas del evento

                            // Obtener los detalles de las propiedades extendidas
                            const { name, email, phone } = eventExtendedProps;

                            // Rellenar el contenido del modal con la información del evento
                            const modalBody = document.getElementById('eventModalBody');

                            console.log(eventExtendedProps)
                            that.modalNombre = eventExtendedProps.name;
                            that.modalEmail = eventExtendedProps.email;
                            that.modalTelefono = eventExtendedProps.phone;
                            that.modalFechaInicio = eventStart;
                            that.modalFechaFin = eventEnd;

                            // Abrir el modal
                            $('#eventModal').modal('show');
                        },
                        events: that.agendaList
                    });


                },
            }
        });

        app.mount('#app');







    </script>
</body>
</html>
