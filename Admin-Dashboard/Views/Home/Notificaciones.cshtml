@model List<BusinessEntity.Response.NotificacionesDetalleResponse>
@{
    ViewData["Title"] = "Lista de Notificaciones";
}
<head>
    <link href="~/css/sb-admin-2.min.css" rel="stylesheet">
</head>
<div class="container" id="app">

    @if (Model.Count > 0)
    {
        <div class="card shadow mb-4">

            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Lista de notificaciones</h6>
                <div class="dropdown no-arrow">
                    <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                     aria-labelledby="dropdownMenuLink">
                        @*<div class="dropdown-divider"></div>*@
                        <div class="dropdown-header">Acciones:</div>
                        <a class="dropdown-item" v-on:click="limpiarNotificaciones()">Borrar notificaciones</a>
                    </div>
                </div>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <div class="container">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Título</th>
                                    <th>Descripción</th>
                                    <th>Fecha y hora de la notificación</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var notificacion in Model)
                                {
                                    if (notificacion.Leido)
                                    {
                                        <tr>
                                            <td>@notificacion.Titulo</td>
                                            <td>@notificacion.Descripcion</td>
                                            <td>@notificacion.FechaHoraEvento</td>
                                        </tr>
                                    }
                                    else
                                    {
                                        <tr>
                                            <td class="font-weight-bold">@notificacion.Titulo</td>
                                            <td class="font-weight-bold">@notificacion.Descripcion</td>
                                            <td class="font-weight-bold">@notificacion.FechaHoraEvento</td>
                                        </tr>

                                    }

                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">No hay notificaciones disponibles para mostrar.</h6>
            </div>
        </div>
    }
</div>

<script src="~/js/vue.global.js"></script>
<script src="~/js/sweetalert2.all.min.js"></script>
<script src="~/js/event-calendar.min.js"></script>

<script>
    const app = Vue.createApp({

        data() {
            return {


            }
        },
        methods: {
            limpiarNotificaciones(){
                Swal.fire({
                    title: 'Eliminar notificaciones',
                    text: `¿Está seguro de eliminar las notificaciones?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Confirmar',
                    cancelButtonText: 'Atrás',
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire({
                            title: "Eliminando notificaciones",
                        })
                        Swal.showLoading()
                        fetch(`/Home/BorrarNotificaciones`, {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                        })
                            .then(response => response.json())
                            .then(success => {
                                Swal.hideLoading()
                                if (success) {
                                    Swal.fire(
                                        'Notificaciones eliminadas',
                                        'Las notificaciones fueron borradas correctamente.',
                                        'success'
                                    ).then((result) => {
                                        window.location.reload();
                                    });
                                } else {
                                    Swal.fire(
                                        'Notificaciones no eliminadas',
                                        'No ha sido posible eliminar las notificaciones.',
                                        'info'
                                    )
                                }
                            })
                            .catch(error => {
                                Swal.hideLoading()
                                Swal.fire(
                                    'Notificaciones no eliminadas',
                                    'No ha sido posible eliminar las notificaciones.',
                                    'info'
                                ).then((result) => {
                                    window.location.reload();
                                });
                            });
                    }
                })
            }
        }
    });

    app.mount('#app');
</script>