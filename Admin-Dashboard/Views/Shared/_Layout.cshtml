



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@ViewData["Title"] - Agendario</title>
    <link href="~/lib/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
          rel="stylesheet">
    <link rel="icon" type="image/x-icon" href="~/favicon.png">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>



<body id="page-top">

    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Sidebar -->
        <ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

            <!-- Sidebar - Brand -->
            <a class="sidebar-brand d-flex align-items-center justify-content-center" href="@Url.Action("Index", "Home")">
                <div class="sidebar-brand-icon rotate-n-15">
                    <i class="far fa-clock"></i>
                </div>
                <div class="sidebar-brand-text mx-3">Agendario</div>
            </a>

            <!-- Divider -->
            <hr class="sidebar-divider my-0">

            <!-- Nav Item - Dashboard -->
            <li class="nav-item active">
                <a class="nav-link" href="@Url.Action("Index", "Home")">
                    <i class="fas fa-home"></i>
                    <span>Inicio</span>
                </a>
            </li>

            <!-- Divider -->
            <hr class="sidebar-divider">

            <!-- Heading -->
            <div class="sidebar-heading">
                Agenda
            </div>

            <!-- Nav Item - Pages Collapse Menu -->
            <li class="nav-item">
                <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseTwo"
                   aria-expanded="true" aria-controls="collapseTwo">
                    <i class="fas fa-edit"></i>
                    <span>Acciones</span>
                </a>
                <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionSidebar">
                    <div class="bg-white py-2 collapse-inner rounded">
                        <h6 class="collapse-header">Acciones de Agenda:</h6>
                        <a class="collapse-item" href="@Url.Action("AltaManual", "Acciones")">Crear Turno</a>
                        <a class="collapse-item" href="@Url.Action("TurnosConfirmados", "Acciones")">Turnos confirmados</a>
                        <a class="collapse-item" href="@Url.Action("AdministrarHoras", "Acciones")">Bloquear Agenda</a>
                        <a class="collapse-item" href="@Url.Action("HorariosBloqueados", "Acciones")">Horarios bloqueados</a>

                    </div>
                </div>
            </li>

            <!-- Nav Item - Utilities Collapse Menu -->
            <li class="nav-item">
                <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapseUtilities"
                   aria-expanded="true" aria-controls="collapseUtilities">
                    <i class="fas fa-fw fa-wrench"></i>
                    <span>Configuración</span>
                </a>
                <div id="collapseUtilities" class="collapse" aria-labelledby="headingUtilities"
                     data-parent="#accordionSidebar">
                    <div class="bg-white py-2 collapse-inner rounded">
                        <h6 class="collapse-header">Perfil:</h6>
                        <a class="collapse-item" href="@Url.Action("PerfilPublico", "Configuracion")">Perfil público</a>
                    </div>
                </div>
            </li>

            <div id="dynamicContentContainer"></div>

            <!-- Divider -->
            <hr class="sidebar-divider">

            <!-- Sidebar Toggler (Sidebar) -->
            <div class="text-center d-none d-md-inline">
                <button class="rounded-circle border-0" id="sidebarToggle"></button>
            </div>
        </ul>
        <!-- End of Sidebar -->
        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

                <!-- Topbar -->
                <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

                    <!-- Sidebar Toggle (Topbar) -->
                    <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
                        <i class="fa fa-bars"></i>
                    </button>

                    <!-- Topbar Navbar -->
                    <ul class="navbar-nav ml-auto">
                        <!-- Nav Item - Alerts -->
                        <li class="nav-item dropdown no-arrow mx-1">
                            <a class="nav-link dropdown-toggle" href="#" id="alertsDropdown" role="button"
                               data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" onclick="marcarNotificacionesLeidas()">
                                <i class="fas fa-bell fa-fw"></i>
                                <!-- Counter - Alerts -->
                                <span class="badge badge-counter" id="notificationCant"></span>
                            </a>
                            <!-- Dropdown - Alerts -->
                            <div class="dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                 aria-labelledby="alertsDropdown" id="notificationsList">
                                <h6 class="dropdown-header">
                                    Notificaciones
                                </h6>
                            </div>

                        </li>

                        <div class="topbar-divider d-none d-sm-block"></div>






                        <!-- Nav Item - User Information -->
                        <li class="nav-item dropdown no-arrow">
                            <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
                               data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @*                                <img class="img-profile rounded-circle"
                                src="~/img/undraw_profile.svg">*@
                                <span class="mr-2 d-none d-lg-inline text-gray-600 small">@User.Identity.Name</span>
                            </a>
                            <!-- Dropdown - User Information -->
                            <div class="dropdown-menu dropdown-menu-right shadow animated--grow-in"
                                 aria-labelledby="userDropdown">
                                <a class="dropdown-item" href="@Url.Action("Perfil", "Configuracion")">
                                    <i class="fas fa-user fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Perfil
                                </a>
@*                                <a class="dropdown-item" href="#">
                                    <i class="fas fa-cogs fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Configuración
                                </a>*@
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#logoutModal">
                                    <i class="fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400"></i>
                                    Cerrar Sesión
                                </a>
                            </div>
                        </li>

                    </ul>

                </nav>
                <!-- End of Topbar -->
                <!-- Begin Page Content -->
                <div class="container-fluid">
                    <div class="container">
                        <main role="main" class="pb-3">
                            @RenderBody()
                        </main>
                    </div>
                </div>

            </div>
            <!-- End of Main Content -->
            <!-- Footer -->
            <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                    <div class="copyright text-center my-auto">
                        <span>
                            Lautaro Farias - 2023 |
                            <a href="https://www.linkedin.com/in/lautarofarias/" style="text-decoration: none;" target="_blank">LinkedIn</a>
                        </span>
                    </div>
                </div>
            </footer>
            <!-- End of Footer -->

        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->
    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Cerrar sesión</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">Selecciona "Cerrar sesión" para salir.</div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancelar</button>
                    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                        <button type="submit" class="btn btn-primary">Cerrar sesión</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap core JavaScript-->
    <script src="~/lib/jquery/jquery.min.js"></script>
    <script src="~/lib/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="~/lib/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="~/js/sb-admin-2.min.js"></script>

    <!-- Page level plugins -->
    @*    <script src="~/js/chart.js/Chart.min.js"></script>
    *@
    <!-- Page level custom scripts -->

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>

        $.get('@Url.Action("ValidateAdmin", "Admin")', function (content) {
            $("#dynamicContentContainer").html(content);
        });

        //Notificaciones
        let leidas = false;
        let requestEjecutada = false;
        // Llamamos al método para actualizar el contador al cargar la página
        window.addEventListener('DOMContentLoaded', actualizarContadorNotificaciones);
        // Llamamos al método para cargar y mostrar notificaciones al cargar la página
        window.addEventListener('DOMContentLoaded', cargarNotificaciones);



        function marcarNotificacionesLeidas() {

            const contadorElement = document.getElementById('notificationCant');
            contadorElement.classList.remove("badge-danger");
            contadorElement.textContent = '';
            if (leidas) {
                const spanElements = document.querySelectorAll('.mensaje'); // Selecciona los elementos span

                spanElements.forEach(spanElement => {
                    spanElement.classList.remove('font-weight-bold'); // Quita la clase bold
                    spanElement.classList.add('font-weight-regular'); // Agrega la clase regular
                });

            }
            else {
                leidas = true;
                if (!requestEjecutada) {
                    fetch('@Url.Action("NotificacionesLeidas", "Home")')
                        .then(response => response.json())
                        .then(success => {
                            if (success) {
                                requestEjecutada = true;

                            }

                        })
                        .catch(error => {
                            requestEjecutada = false;

                        });
                }

            }
        }



        // Método para actualizar el contador de notificaciones no leídas
        function actualizarContadorNotificaciones() {
            fetch('@Url.Action("GetCantNotificaciones", "Home")')
                .then(response => response.json())
                .then(data => {
                    let cant = data;
                    // Seleccionamos el elemento del contador
                    const contadorElement = document.getElementById('notificationCant');

                    // Actualizamos el contenido del contador
                    if (cant > 0) {
                        contadorElement.classList.add("badge-danger"); // Agrega la clase adicional
                        contadorElement.textContent = cant.toString();
                    } else {
                        contadorElement.textContent = '';
                    }
                })
                .catch(error => {
                    console.error("Error al obtener la cantidad de notificaciones:", error);
                    return 0; // Manejo del error, retornamos 0 en caso de fallo
                });
        }




        // Método para cargar y mostrar notificaciones
        function cargarNotificaciones() {
            // Simulamos una llamada AJAX para obtener las notificaciones del servidor
            const notificaciones = obtenerNotificacionesDesdeElServidor();
        }



        // Método para obtener notificaciones desde el servidor (simulado)
        function obtenerNotificacionesDesdeElServidor() {
            return fetch('/Home/GetNotificacionesList')
                .then(response => response.json())
                .then(data => {

                    let arr = [];
                    for (let notif of data) {
                        let obj = {
                            fecha: notif.fechaHoraEvento,
                            mensaje: notif.titulo,
                            leida: notif.leido,
                        }
                        arr.push(obj);
                    }

                    // Seleccionamos el elemento de la lista de notificaciones
                    const listaNotificaciones = document.getElementById('notificationsList');

                    // Vaciamos la lista de notificaciones
                    listaNotificaciones.innerHTML = '';
                    if (arr.length > 0) {
                        // Iteramos a través de las notificaciones y las agregamos al DOM
                        arr.forEach(notificacion => {
                            let notificacionElement = "";
                            if (notificacion.leida) {
                                notificacionElement = `
                                                                                         <a class="dropdown-item d-flex align-items-center" href="#">
                                                                                         <div class="mr-3">
                                                                                             <div class="icon-circle bg-primary">
                                                                                             <i class="far fa-bell" style="color: #ffffff;"></i>
                                                                                             </div>
                                                                                         </div>
                                                                                         <div>
                                                                                                     <div class="small text-gray-500">${notificacion.fecha}</div>
                                                                                             <span class="mensaje font-weight-regular">${notificacion.mensaje}</span>
                                                                                         </div>
                                                                                        </a>`;
                            } else {
                                notificacionElement = `
                                                                                             <a class="dropdown-item d-flex align-items-center" href="#">
                                                                                             <div class="mr-3">
                                                                                                 <div class="icon-circle bg-primary">
                                                                                                 <i class="far fa-bell" style="color: #ffffff;"></i>
                                                                                                 </div>
                                                                                             </div>
                                                                                             <div>
                                                                                                         <div class="small text-gray-500">${notificacion.fecha}</div>
                                                                                                 <span class="mensaje font-weight-bold">${notificacion.mensaje}</span>
                                                                                             </div>
                                                                                         </a>`;
                            }
                            // Agregamos la notificación al DOM
                            listaNotificaciones.insertAdjacentHTML('beforeend', notificacionElement);
                        });
                    }

        @{
            string urlMostrarNotificaciones = Url.Action("Notificaciones", "Home");
        }
                        let btnMostrarTodo = '<a class="dropdown-item text-center small text-gray-500" href="' + '@urlMostrarNotificaciones' + '">Mostrar todas las notificaciones</a>';
                    listaNotificaciones.insertAdjacentHTML('beforeend', btnMostrarTodo);


                })
                .catch(error => {
                    console.error("Error al obtener las notificaciones desde el servidor:", error);
                    return []; // Manejo del error, retornamos un arreglo vacío en caso de fallo
                });
        }

    </script>
</body>
</html>